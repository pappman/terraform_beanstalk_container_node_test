pipeline {
    agent {
        node {
            label 'master'
        }
    }
 
    options {
        timeout(time: 5, unit: 'MINUTES')
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    environment {
        registry = "psgabriel/node"
        registryCredential = 'dockerhub'
}


    stages {
        stage('Get App') {
            steps {
                sh '''
                cd node_app_docker
                rm -rf nodejs.org
                git clone https://github.com/nodejs/nodejs.org.git
                '''
                // deleteDir()
            }
        }
        stage('Building image') {
            steps{
                sh '''
                cd node_app_docker
                docker build -t node_stg:latest .
                '''
            }
        }
        // stage('Deploy Image') {
        //     steps{
        //         script {
        //             docker.withRegistry( '', registryCredential ) {
        //                 dockerImage.push()
        //             }
        //         }
        //     }
        // }
    }
}