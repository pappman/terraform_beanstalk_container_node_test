pipeline {
    agent {
        node {
            label 'master'
        }
    }
 
    options {
        timeout(time: 20, unit: 'MINUTES')
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    stages {
        stage('Get App') {
            steps {
                sh '''
                cd node_app_docker
                rm -rf nodejs.org
                git clone https://github.com/nodejs/nodejs.org.git
                '''
                // deleteDir()
            }
        }
        // stage('Building Docker Image') {
        //     steps{
        //         sh '''
        //         cd node_app_docker
        //         docker build -t node_stg:latest .
        //         docker images
        //         '''
        //     }
        // }
        def dockerImage
        stage('Build image') {
            dockerImage = docker.build("psgabriel/node:latest")
        }

        stage('Push image') {
            docker.withRegistry('https://registry-1.docker.io/v2/', 'dockerhub') {
            dockerImage.push()
            }
        }
        // stage ('Docker Hub Publish') {
        //     steps {
        //         script {
        //             withDockerServer([uri: "tcp://127.0.0.1:2375"]) {
        //                 withDockerRegistry([credentialsId: 'dockerhub', url: "https://hub.docker.com"]) {
        //                     sh '''
        //                     docker tag node_stg:latest psgabriel/node:latest
        //                     docker push psgabriel/node:latest
        //                     '''
        //                 }
        //             }
        //         }
        //     }
        // }

    }
}